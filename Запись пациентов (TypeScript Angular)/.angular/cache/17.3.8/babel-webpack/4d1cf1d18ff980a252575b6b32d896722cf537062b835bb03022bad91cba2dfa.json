{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from \"@angular/core\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { DateBlock } from \"./date-block.component\";\nimport { MasterCard } from \"./master-card.component\";\nimport { ScheduleCard } from \"./schedule-card.component\";\nimport { DialogModule } from 'primeng/dialog';\nimport { ButtonModule } from 'primeng/button';\nimport { FormsModule } from '@angular/forms';\nimport { NgFor } from \"@angular/common\";\nlet AppComponent = class AppComponent {\n  http;\n  masters = [];\n  selectedMasters = [];\n  currentDate = \"\";\n  workStart = \"8:30\";\n  workEnd = \"12:00\";\n  visible = true;\n  constructor(http) {\n    this.http = http;\n    document.body.className = 'forBody';\n    let str = new Date().toString().split(\" \");\n    this.currentDate = `${str[1]} ${str[2]} ${str[3]}`;\n  }\n  ngOnInit() {\n    this.http.get('http://localhost:3000/masters', {}).subscribe({\n      next: data => {\n        this.masters = data[\"masters\"];\n      }\n    });\n  }\n  handleCardClick(event) {\n    if (event.checked) {\n      this.selectedMasters.push(event.originalEvent.target.control.id);\n      console.log(this.selectedMasters);\n    } else {\n      let id = event.originalEvent.target.control.id;\n      let forRemove = this.selectedMasters.find(item => item == id);\n      this.selectedMasters.splice(this.selectedMasters.indexOf(forRemove), 1);\n      console.log(this.selectedMasters);\n    }\n  }\n  handleDateChange(event) {\n    let str = event.toString().split(\" \");\n    this.currentDate = `${str[1]} ${str[2]} ${str[3]}`;\n  }\n};\nAppComponent = __decorate([Component({\n  selector: \"my-app\",\n  standalone: true,\n  imports: [HttpClientModule, DateBlock, MasterCard, ScheduleCard, DialogModule, ButtonModule, FormsModule, NgFor],\n  template: `\n    <div id=\"sidebar\">\n\n        <date-block (changed)=\"handleDateChange($event)\"></date-block>\n\n        <div id=\"masters-block\">\n            <h3>СПЕЦИАЛИСТЫ <span id=\"count-info\"></span></h3>\n            <div id=\"masters-list\">\n                <master-card *ngFor=\"let item of masters; let i = index\" [id]=\"'master'+i\" [value]=\"item.fullName\" (clicked)=\"handleCardClick($event)\"></master-card>\n            </div>\n        </div>\n\n    </div>\n\n    <div id=\"main-content\">\n\n        <div id=\"main-header\">\n            <h2>Расписание специалистов</h2>\n            <a href=\"graphics.html\">аналитика</a>\n        </div>\n\n        <div id=\"schedules-block\">\n            <div id=\"schedules-list\">\n                <schedule-card *ngFor=\"let item of selectedMasters; let i = index\"\n                 [author]=\"masters[item.slice(6)].fullName\" [datetime]=\"currentDate\" [workStart]=\"workStart\" [workEnd]=\"workEnd\"></schedule-card>\n            </div>\n        </div>\n\n    </div>\n    <p-dialog header=\"Edit Profile\" [(visible)]=\"visible\" [style]=\"{ width: '25rem' }\" [modal]=\"true\">\n        <span class=\"p-text-secondary block mb-5\">Update your information.</span>\n        <div class=\"flex align-items-center gap-3 mb-3\">\n            <label for=\"username\" class=\"font-semibold w-6rem\">Username</label>\n            <input pInputText id=\"username\" class=\"flex-auto\" autocomplete=\"off\" />\n        </div>\n        <div class=\"flex align-items-center gap-3 mb-5\">\n            <label for=\"email\" class=\"font-semibold w-6rem\">Email</label>\n            <input pInputText id=\"email\" class=\"flex-auto\" autocomplete=\"off\" (mouseup)=\"(event) => event.preventDefault\" />\n        </div>\n        <div class=\"flex justify-content-end gap-2\">\n            <p-button label=\"Cancel\" severity=\"secondary\" (click)=\"visible = false\" />\n            <p-button label=\"Save\" (click)=\"visible = false\" />\n        </div>\n    </p-dialog>\n    `,\n  styleUrls: ['./assets/app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}